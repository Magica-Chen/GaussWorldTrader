[build-system]
requires = ["setuptools>=68.0", "wheel>=0.41.0"]
build-backend = "setuptools.build_meta"

[project]
name = "quantitative-trading-system"
version = "1.0.0"
description = "A comprehensive Python 3.12+ quantitative trading system"
authors = [
    {name = "Trading System Team", email = "team@tradingsystem.com"}
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.12"
keywords = ["trading", "finance", "quantitative", "backtesting", "alpaca"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed"
]

dependencies = [
    "pandas>=2.1.0",
    "numpy>=1.26.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "alpaca-trade-api>=3.1.1",
    "ta-lib>=0.4.28",
    "matplotlib>=3.8.0",
    "plotly>=5.17.0",
    "seaborn>=0.13.0",
    "streamlit>=1.28.0",
    "yfinance>=0.2.20",
    "fredapi>=0.5.1",
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",
    "sqlalchemy>=2.0.0",
    "loguru>=0.7.0",
    "rich>=13.6.0",
    "typer>=0.9.0",
    "aiohttp>=3.9.0",
    "websockets>=12.0",
    "pydantic>=2.4.0",
    "httpx>=0.25.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.6.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0"
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0"
]
performance = [
    "numba>=0.58.0",
    "cython>=3.0.0"
]
all = [
    "quantitative-trading-system[dev,docs,performance]"
]

[project.urls]
Homepage = "https://github.com/yourusername/quantitative-trading-system"
Documentation = "https://quantitative-trading-system.readthedocs.io/"
Repository = "https://github.com/yourusername/quantitative-trading-system.git"
Issues = "https://github.com/yourusername/quantitative-trading-system/issues"

[project.scripts]
trading-cli = "main:main"
trading-dashboard = "dashboard:main"

[tool.setuptools]
packages = ["src", "config"]

[tool.setuptools.package-data]
"*" = ["*.toml", "*.yaml", "*.yml", "*.json"]

# Black configuration (Python 3.12 optimized)
[tool.black]
target-version = ['py312']
line-length = 100
skip-string-normalization = true
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Ruff configuration (faster linter)
[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002", # unused method argument
]
unfixable = ["B"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]
"tests/**/*" = ["ARG", "FBT"]

[tool.ruff.isort]
known-first-party = ["src", "config"]

# MyPy configuration (Python 3.12 features)
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = [
    "alpaca_trade_api.*",
    "ta",
    "fredapi.*",
    "yfinance.*",
    "numba.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
    "*/migrations/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]